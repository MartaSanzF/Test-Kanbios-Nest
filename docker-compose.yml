version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - MONGO_URL=${MONGO_URL}
    depends_on:
      - db
      - mongo
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    command: npm run dev
    environment:
      - NODE_ENV=development
    networks:
      - app_network

  db:
    image: postgres:13
    container_name: db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  mongo:
    image: mongo:latest  # Utilisation de l'image officielle de MongoDB
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=test
    volumes:
      - mongo_data:/data/db  # Volume pour stocker les donn√©es MongoDB
    ports:
      - "27017:27017"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  pg_data:
  mongo_data:
